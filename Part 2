import sys
from PyQt5.QtWidgets import QApplication, QMainWindow, QAction, QStatusBar, QToolBar
from PyQt5.QtCore import QCoreApplication, QSize
from PyQt5.QtGui import QIcon, QKeySequence


#all methods to add

class Window(QMainWindow):
    def __init__(self):
        super().__init__()
        
        super().__init__()
        self.setWindowTitle("Image Editor")
        self.setMinimumWidth(700)
        self.setMinimumHeight(300)
        
        self.reset = QAction(QIcon("/home/jade/ESME/HMI/DM/animal-penguin.png"), "Reset", self)
        #self.reset.setStatusTip("C'est le premier bouton")
        #self.reset.triggered.connect(self.onMyToolBarButtonClick) TODO
        self.reset.setShortcut(QKeySequence('Ctrl+D'))
        
        self.open = QAction(QIcon("/home/jade/ESME/HMI/DM/folder-open-feed.png"), "Open", self)
        self.open.setShortcut(QKeySequence('Ctrl+O'))
        
        
        self.red_filter = QAction(QIcon("/home/jade/ESME/HMI/DM/android_rouge.png"), "Red Filter", self)
        self.red_filter.setShortcut(QKeySequence('Ctrl+R'))
        
        self.green_filter = QAction(QIcon("/home/jade/ESME/HMI/DM/android_vert.png"), "Green Filter", self)
        self.green_filter.setShortcut(QKeySequence('Ctrl+V'))
        
        self.blue_filter = QAction(QIcon("/home/jade/ESME/HMI/DM/android_bleu.png"), "Blue Filter", self)
        self.blue_filter.setShortcut(QKeySequence('Ctrl+B'))
        
        self.neg_filter = QAction(QIcon("/home/jade/ESME/HMI/DM/android_noiretblanc.png"), "Negative Filter", self)
        self.neg_filter.setShortcut(QKeySequence('Ctrl+N'))
        
        self.grey_filter = QAction(QIcon("/home/jade/ESME/HMI/DM/android_gris.png"), "Grey Filter", self)
        self.grey_filter.setShortcut(QKeySequence('Ctrl+G'))
        
        
        self.by4 = QAction(QIcon("/home/jade/ESME/HMI/DM/application-tile.png"), "By 4", self)
        self.by4.setShortcut(QKeySequence('Ctrl+P'))
        
        
        self.color_gen = QAction(QIcon("/home/jade/ESME/HMI/DM/color.png"), "Color Generator", self) #I used an icone from yusukekamiyamane.com
        self.color_gen.setShortcut(QKeySequence('Ctrl+C'))
        
        
        self.exit = QAction(QIcon("/home/jade/ESME/HMI/DM/bomb.png"), "Exit", self)
        self.exit.setShortcut(QKeySequence('Ctrl+Q'))
        
        
        self.setStatusBar(QStatusBar())
        
        self.menuImage = self.menuBar().addMenu("Image")
        self.menuImage.addAction(self.reset)
        self.menuImage.addAction(self.open)
        
        self.menuFilter = self.menuBar().addMenu("Filter")
        self.menuFilter.addAction(self.red_filter)
        self.menuFilter.addAction(self.green_filter)
        self.menuFilter.addAction(self.blue_filter)
        self.menuFilter.addAction(self.neg_filter)
        self.menuFilter.addAction(self.grey_filter)
        
        self.menuPhotomaton = self.menuBar().addMenu("Photomaton")
        self.menuPhotomaton.addAction(self.by4)
        
        self.menuColor = self.menuBar().addMenu("Color")
        self.menuColor.addAction(self.color_gen)
        
        self.menuExit = self.menuBar().addMenu("Exit")
        self.menuExit.addAction(self.exit)
        
        #task 4 
        self.toolbar = QToolBar("My toolbar")
        self.toolbar.setIconSize(QSize(16,16))
        self.addToolBar(self.toolbar)
        
        self.b_reset = QAction(QIcon("/home/jade/ESME/HMI/DM/animal-penguin.png"), "Reset", self)
        #self.b_reset.setStatusTip("Driiiiiing!!!")
        self.b_reset.setToolTip("Reset")    # Infobulle
        #self.b_reset.triggered.connect(self.onToolBarButtonClick)
        self.toolbar.addAction(self.b_reset)
        
        self.b_open = QAction(QIcon("/home/jade/ESME/HMI/DM/folder-open-feed.png"), "Open", self)
        self.b_open.setToolTip("Open")   
        self.toolbar.addAction(self.b_open)
        
        self.b_red = QAction(QIcon("/home/jade/ESME/HMI/DM/android_rouge.png"), "Red filter", self)
        self.b_red.setToolTip("Red filter")   
        self.toolbar.addAction(self.b_red)
        
        self.b_green = QAction(QIcon("/home/jade/ESME/HMI/DM/android_vert.png"), "Green filter", self)
        self.b_green.setToolTip("Green filter")   
        self.toolbar.addAction(self.b_green)
        
        self.b_blue = QAction(QIcon("/home/jade/ESME/HMI/DM/android_bleu.png"), "Blue filter", self)
        self.b_blue.setToolTip("Blue filter")   
        self.toolbar.addAction(self.b_blue)
        
        self.b_neg = QAction(QIcon("/home/jade/ESME/HMI/DM/android_noiretblanc.png"), "Negative filter", self)
        self.b_neg.setToolTip("Negative filter")   
        self.toolbar.addAction(self.b_neg)
        
        self.b_grey = QAction(QIcon("/home/jade/ESME/HMI/DM/android_gris.png"), "Grey filter", self)
        self.b_grey.setToolTip("Negative filter")   
        self.toolbar.addAction(self.b_grey)
        
        self.b_4 = QAction(QIcon("/home/jade/ESME/HMI/DM/application-tile.png"), "By 4", self)
        self.b_4.setToolTip("By 4")   
        self.toolbar.addAction(self.b_4)
        
        self.b_color = QAction(QIcon("/home/jade/ESME/HMI/DM/color.png"), "Color Generator", self)
        self.b_color.setToolTip("Color Generator")   
        self.toolbar.addAction(self.b_color)
        
        self.b_exit = QAction(QIcon("/home/jade/ESME/HMI/DM/bomb.png"), "Exit", self)
        self.b_exit.setToolTip("Exit")   
        self.toolbar.addAction(self.b_exit)
        
        self.setStatusBar(QStatusBar(self))
        
 
    
app = QCoreApplication.instance()
if app is None:
    app = QApplication(sys.argv)
    
window = Window()
window.show()

app.exec_()
